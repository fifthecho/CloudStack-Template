#!/bin/bash 
#
# Flush all things not needed for a new VM and create default network environment
#
# chkconfig: 235 90 02
# description: Prepare new VM
### BEGIN INIT INFO
# Provides:          firstboot-cloudstack
# Required-Start:    $network $local_fs $syslog
# Required-Stop:     $network $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Start-Before:    $sshd
# Short-Description: Prepare new VM
# Description:       Prepare new VM by flushing old information and preparing network environment
### END INIT INFO
. /lib/lsb/init-functions

. /usr/share/cloudstack/cloudstack-common-functions

start_daemon () {
  echo "Initializing Virtual Machine..." 
  logger -t "Setup" "Initializing Virtual Machine..."
  find_lease
  
  HOST_NAME=`grep host-name $LEASE_FILE | awk '{print $NF}' | tr -d '\;' | tr -d '"' | uniq`
  echo $HOST_NAME > /etc/hostname
  echo "Setting hostname to $HOST_NAME" 
  logger -t "Setup" "Setting hostname to $HOST_NAME"
  /bin/hostname $HOST_NAME

  echo "# Do not remove the following line, or various programs" > /etc/hosts
  echo "# that require network functionality will fail." >> /etc/hosts
  echo "127.0.0.1       localhost.localdomain localhost" >> /etc/hosts
  echo "# The following lines are desirable for IPv6 capable hosts" >> /etc/hosts
  echo "::1             ip6-localhost ip6-loopback" >> /etc/hosts
  echo "fe00::0         ip6-localnet" >> /etc/hosts
  echo "ff00::0         ip6-mcastprefix" >> /etc/hosts
  echo "ff02::1         ip6-allnodes" >> /etc/hosts
  echo "ff02::2         ip6-allrouters" >> /etc/hosts
  echo "::1             localhost6.localdomain6 localhost6" >> /etc/hosts
  IP=`grep fixed-address $LEASE_FILE | awk '{print $NF}' | tr -d '\;' | uniq`
  echo "$IP      $HOST_NAME" >> /etc/hosts
  echo "Setting up /etc/hosts for IP address $IP" 
  logger -t "Setup" "Setting up /etc/hosts for IP address $IP"

  echo "Generating new SSH keys"
  logger -t "Setup" "Generating new SSH keys"

  if [ -f /etc/systemd/system/cloudstack-firstboot.service ]; then
    dpkg-reconfigure openssh-server
  elif [ -f /lib/init/upstart-job ]; then
    test -f /etc/ssh/ssh_host_dsa_key || ssh-keygen -q -t dsa -N "" -f /etc/ssh/ssh_host_dsa_key 
    test -f /etc/ssh/ssh_host_rsa_key || ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key 
    test -f /etc/ssh/ssh_host_ecdsa_key || ssh-keygen -q -t ecdsa -N "" -f /etc/ssh/ssh_host_ecdsa_key
    test -f /etc/ssh/ssh_host_ed25519_key || ssh-keygen -q -t ed25519 -N "" -f /etc/ssh/ssh_host_ed25519_key
    mkdir /var/run/sshd
    exec /usr/sbin/sshd -D &
  else
    dpkg-reconfigure openssh-server
  fi

  /usr/sbin/update-rc.d cloudstack-firstboot disable
  /usr/sbin/update-rc.d cloudstack-firstboot remove
  if [ -f /lib/init/upstart-job ]; then
    echo manual > /etc/init/cloudstack-firstboot.override
  fi
}

case "$1" in
    start)             
        log_daemon_msg "Starting $NAME daemon" "$NAME"
        start_daemon
        log_end_msg 0
        ;;
    stop)
        log_daemon_msg "Stopping $NAME daemon" "$NAME"
        log_end_msg 0
        ;;
    restart)
        log_daemon_msg "Restarting $NAME daemon" "$NAME"
        log_end_msg 0
        ;;
    *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart}"
        exit 2
        ;;
esac

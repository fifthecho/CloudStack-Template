#!env bash
function find_lease() {
  # Add your method of finding a DHCP lease here
  if [ -f /etc/debian_version ]; then
    # Ubuntu / Debian
    DHCLIENT_BIN=$(which dhclient)
    DHCLIENT="dhclient"
  elif [ -f /etc/redhat-release ]; then
    # Redhat / CentOS / Scientific Linux
    DHCLIENT_BIN=$(which dhclient)
    DHCLIENT="dhclient"
  elif [ -f /etc/zypp/zypper.conf ]; then
    #SUSE
    DHCLIENT_BIN=$(which wicked)
    DHCLIENT="wicked"
  elif [ -f /etc/alpine-release ]; then
    DHCLIENT_BIN=$(which dhcpcd)
    DHCLIENT="dhcpcd"
  elif [ -f /etc/freebsd-update.conf ]; then
    # FreeBSD
    echo "Not configured yet."
  else
    # Others
    echo "Unknown DHCP config."

  fi

  completed=0

  running_networkmanager=$(pgrep NetworkManager | wc -l)

  if [[ -n $running_networkmanager && $running_networkmanager -ge 1 ]] ; then
    LEASE_FILE=$(pgrep -a dhclient | sed -e 's/\s\+/\n/g' | grep lease | uniq)
    completed=1
  fi

  if [[ $DHCLIENT == "dhcpcd" && completed -eq 0 ]]; then
    $DHCLIENT_BIN -U "$NIC" > "/var/lib/dhcp/dhcp-$NIC.lease" 2>&1
    LEASE_FILE="/var/lib/dhcp/dhcp-$NIC.lease"
    completed=1
  fi

  if [[ $DHCLIENT == "wicked" && completed -eq 0 ]]; then
    LEASE_FILE="/var/lib/wicked/lease-$NIC-dhcp-ipv4.xml"
    completed=1
  fi

  if [[ $DHCLIENT == "dhclient" && completed -eq 0 ]]; then
    dhclient_pid=$(pgrep dhclient)
    LEASE_FILE=$(ps $dhclient_pid | sed -e 's/\s\+/\n/g' | grep lease | uniq)
    completed=1
  fi

  if [[ completed -eq 1 ]]; then
    # echo "Using DHCP lease from $LEASE_FILE"
    logger -t "cloud" "Using DHCP lease from $LEASE_FILE"
    export LEASE_FILE
  else
    logger -t "cloud" "No DHCP lease found. Please report this to https://github.com/fifthecho/CloudStack-Template"
    exit 1
  fi

}

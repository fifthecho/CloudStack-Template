#!/bin/bash
#
# Flush all things not needed for a new VM and create default network environment
#
# chkconfig: 235 49 02
# description: Prepare new VM
### BEGIN INIT INFO
# Provides:          firstboot-cloudstack
# Required-Start:    $network $local_fs $remote_fs $syslog $all
# Required-Stop:     $network $local_fs $remote_fs $syslog $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Prepare new VM
# Description:       Prepare new VM by flushing old information and preparing network environment
### END INIT INFO

. /usr/share/cloudstack/cloudstack-common-functions

echo "Initializing Virtual Machine..."
logger -t "Setup" "Initializing Virtual Machine..."
find_lease

HOST_NAME=`grep host-name $LEASE_FILE | awk '{print $NF}' | tr -d '\;' | tr -d '"' | uniq`
echo "Setting hostname to $HOST_NAME" 
logger -t "Setup" "Setting hostname to $HOST_NAME"
echo $HOST_NAME > /etc/hostname
/bin/hostname $HOST_NAME

echo "# Do not remove the following line, or various programs" > /etc/hosts
echo "# that require network functionality will fail." >> /etc/hosts
echo "127.0.0.1       localhost.localdomain localhost" >> /etc/hosts
echo "# The following lines are desirable for IPv6 capable hosts" >> /etc/hosts
echo "::1             ip6-localhost ip6-loopback" >> /etc/hosts
echo "fe00::0         ip6-localnet" >> /etc/hosts
echo "ff00::0         ip6-mcastprefix" >> /etc/hosts
echo "ff02::1         ip6-allnodes" >> /etc/hosts
echo "ff02::2         ip6-allrouters" >> /etc/hosts
echo "::1             localhost6.localdomain6 localhost6" >> /etc/hosts
IP=`grep fixed-address $LEASE_FILE | awk '{print $NF}' | tr -d '\;' | uniq`
echo "Setting up /etc/hosts for IP address $IP" 
logger -t "Setup" "Setting up /etc/hosts for IP address $IP"
echo "$IP      $HOST_NAME" >> /etc/hosts

/usr/bin/yum clean all

chkconfig cloudstack-firstboot off

if [ -f /usr/bin/systemd-run ]
  then
    systemctl disable cloudstack-firstboot
fi

#!/bin/bash 
#
# cloud-set-guest-sshkey    SSH Public Keys Download Client
#
# chkconfig: 2345 50 02
# description: SSH Public Keys Download Client
#
### BEGIN INIT INFO
# Provides:          cloud-set-guest-sshkey
# Required-Start:    $local_fs $network $sshd
# Required-Stop:     $local_fs $syslog
# Should-Start:      $syslog
# Should-Stop:       $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: CloudStack SSH Public Keys Download Client
# Description:       CloudStack SSH Public Keys Download Client
### END INIT INFO
{% if 'stat' in platform_function_library_rhel %}
  {% set platform_function_library = platform_function_library_rhel %}
  {% set function_caller = "action" %}
{% endif %}
{% if 'stat' in platform_function_library_debian %}
 {% set platform_function_library = platform_function_library_debian %}
 {% set function_caller =  "log_action_msg" %}
{% endif %}
{% if 'stat' in platform_function_library_suse %}
  {% set platform_function_library = platform_function_library_suse %}
  {% set function_caller = "echo -n" %}
{% endif %}

# Modify this line to specify the user (default is root)
user=root

# Source function library.
. {{ platform_function_library.stat.path }}

. /usr/share/cloudstack/cloudstack-common-functions

function cloud_set_guest_sshkey() {
    keys_received=0
    file_count=0
    sleep $[ 1 + $[ RANDOM % 10 ]]
    find_lease
        
    SSHKEY_SERVER_IP=$(grep dhcp-server-identifier $LEASE_FILE | uniq | tail -1 | awk '{print $NF}' | tr -d '\;')

    if [ -n $SSHKEY_SERVER_IP ]; then
        logger -t "cloud" "Sending request to ssh key server at $SSHKEY_SERVER_IP"

        publickey=$(wget -t 3 -T 20 -O - http://$SSHKEY_SERVER_IP/latest/public-keys 2>/dev/null)

        if [ $? -eq 0 ]; then
            logger -t "cloud" "Got response from server at $SSHKEY_SERVER_IP"
            keys_received=1
        fi
    else
        logger -t "cloud" "Could not find ssh key server IP in $LEASE_FILE"
    fi


    # did we find the keys anywhere?
    if [ "$keys_received" == "0" ]; then
        logger -t "cloud" "Failed to get ssh keys from any server"
        exit 1
    fi

    # set ssh public key
    homedir=$(grep ^$user /etc/passwd|awk -F ":" '{print $6}')
    sshdir=$homedir/.ssh
    authorized=$sshdir/authorized_keys

    if [ ! -e $sshdir ]; then
        mkdir $sshdir
    fi

    if [ ! -e $authorized ]; then
        touch $authorized
    fi

    if [ `grep -c "$publickey" $authorized` == 0 ]; then
            echo "$publickey" >> $authorized
            /sbin/restorecon -R $homedir/.ssh
    fi
}

# See how we were called.
case "$1" in
  start)
      {{ function_caller }} $"Starting cloud-set-guest-sshkey: " /bin/true
      cloud_set_guest_sshkey
      RETVAL=$?
    ;;
  stop)
      {{ function_caller }} $"Shutting down cloud-set-guest-sshkey: " /bin/true
      RETVAL=$?
      ;;
  restart)
      $0 stop
      $0 start
      ;;
  *)
      echo $"Usage: cloud-set-guest-sshkey {start}"
      RETVAL=2
      ;;
esac

exit $RETVAL
